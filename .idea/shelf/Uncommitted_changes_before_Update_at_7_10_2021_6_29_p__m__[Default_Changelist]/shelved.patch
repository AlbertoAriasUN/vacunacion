Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\" Se importan los dintintos modulos que componene nuestro programa\"\"\"\r\nimport afiliacion\r\nimport lote_vacunas\r\nimport plan_vacunacion\r\nimport ProgramacionVacunas\r\n\r\n\"\"\"cada modulo tiene su propio menu, afiliacion, lote de vacunas,vacunacion y programacion vacunacion\"\"\"\r\n\r\n\r\ndef menuafi():\r\n    \"\"\"Por medio de un bucle se verifica  la opcion seleccionada y en caso de no elegir una valida se le informara \"\"\"\r\n    while True:\r\n        # Mostramos el menu\r\n        print('\\nA D M I N I S T R A R  A F I L I A D O S')\r\n        print(\"\\t1 - Crear Afiliado\")\r\n        print(\"\\t2 - Vacunar Afiliado\")\r\n        print(\"\\t3 - Consultar Afiliado\")\r\n        print(\"\\t4 - Desafiliar Usuario\")\r\n        print(\"\\t5 - Regresar Al Menu Principal\")\r\n        option = input(\"Seleccione una opcion: \")\r\n        if option == '1':\r\n            print('\\n')\r\n            con = afiliacion.sql_afiliado()\r\n            #p=afiliacion.Afiliado().leer_info()\r\n            afiliado = afiliacion.Afiliado().leer_info()\r\n            afiliacion.insertar_tabla(con, afiliado)\r\n            con.close()\r\n        elif option == \"2\":\r\n            # Aca se se vacuna a la gente\r\n            con = afiliacion.sql_afiliado()\r\n            afiliacion.vacunar(con)\r\n            con.close()\r\n        elif option == \"3\":\r\n            # Aca se consulta el afiliado\r\n            con = afiliacion.sql_afiliado()\r\n            afiliacion.consulta(con)\r\n            con.close()\r\n        elif option == \"4\":\r\n            # Aca se desafilia el afiliado y queda con la fecha del momento  de la desafiliacion\r\n            con = afiliacion.sql_afiliado()\r\n            afiliacion.desafiliar(con)\r\n            con.close()\r\n        elif option == \"5\":\r\n            return\r\n        else:\r\n            print(\"\")\r\n            input(\"No has pulsado ninguna opción correcta...\\npulsa una tecla para continuar\")\r\n\r\n\r\ndef menulote():\r\n    while True:\r\n        \"\"\"Por medio de un bucle se verifica  la opcion seleccionada y en caso de no elegir una valida se le informara \"\"\"\r\n        # Mostramos el menu\r\n        print('\\nA D M I N I S T R A R  V A C U N A S')\r\n        print(\"\\t1 - Crear lotes\")\r\n        print(\"\\t2 - Consultar Lote\")\r\n        print(\"\\t3 - Regresar Al Menu Principal\")\r\n        option = input(\"Seleccione una opcion: \")\r\n        if option == \"1\":\r\n            # Aca se crea el lote\r\n            convacunas = lote_vacunas.sql_lotevacunas()\r\n            lote = lote_vacunas.info_lote()\r\n            lote_vacunas.crear_lote(convacunas, lote)\r\n            convacunas.close()\r\n        elif option == \"2\":\r\n            # Aca se consulta el lote\r\n            convacunas = lote_vacunas.sql_lotevacunas()\r\n            lote_vacunas.consultar_lote(convacunas)\r\n            convacunas.close()\r\n        elif option == \"3\":\r\n            return\r\n        else:\r\n            print(\"\")\r\n            input(\"No has pulsado ninguna opción correcta...\\npulsa una tecla para continuar\")\r\n\r\n\r\ndef menuvac():\r\n    while True:\r\n        \"\"\"Por medio de un bucle se verifica  la opcion seleccionada y en caso de no elegir una valida se le informara \"\"\"\r\n        # Mostramos el menu\r\n        print('\\nP L A N  V A C U N A C I O N')\r\n        print(\"\\t1 - Crear Plan\")\r\n        print(\"\\t2 - Consultar Plan\")\r\n        print(\"\\t3 - Regresar Al Menu Principal\")\r\n        option = input(\"Seleccione una opcion: \")\r\n        if option == '1':\r\n            # Aca se crea el plan\r\n            conplan = plan_vacunacion.sql_plan()\r\n            plan = plan_vacunacion.recibirPlan(conplan)\r\n            try:\r\n                plan_vacunacion.crearPlan(conplan, plan)\r\n            except:\r\n                print(\"El plan de vacunacion no pudo ser creado.\")\r\n            conplan.close()\r\n        elif option == '2':\r\n            # Aca se consulta el plan\r\n            conplan = plan_vacunacion.sql_plan()\r\n            plan_vacunacion.consultaplan(conplan)\r\n            conplan.close()\r\n        elif option == \"3\":\r\n            return\r\n        else:\r\n            print(\"\")\r\n            input(\"No has pulsado ninguna opción correcta...\\npulsa una tecla para continuar\")\r\n\r\n\r\ndef provac():\r\n    while True:\r\n        # Mostramos el menu\r\n        \"\"\"Por medio de un bucle se verifica  la opcion seleccionada y en caso de no elegir una valida se le informara \"\"\"\r\n        print('\\nP R O G R A M A  V A C U N A C I O N')\r\n        print(\"\\t1 - Crear Programacion\")\r\n        print(\"\\t2 - Consultar Agenda\")\r\n        print(\"\\t3 - Consulta Individual\")\r\n        print(\"\\t4 - Regresar Al Menu Principal\")\r\n        option = input(\"Seleccione una opcion: \")\r\n        if option == '1':\r\n            # Aca se crea la agendacion de citas\r\n            progplan = ProgramacionVacunas.sql_prog()\r\n            ProgramacionVacunas.infoCita(progplan)\r\n            progplan.close()\r\n\r\n        elif option == '2':\r\n            # Aca se consulta la agenda completa\r\n            progplan = ProgramacionVacunas.sql_prog()\r\n            ProgramacionVacunas.agenda(progplan)\r\n            progplan.close()\r\n            \r\n        elif option == \"3\":\r\n            # Aca se consulta la cita por identificacion del afiliado\r\n            progplan = ProgramacionVacunas.sql_prog()\r\n            ProgramacionVacunas.consulta_individual(progplan)\r\n            progplan.close()\r\n        elif option == \"4\":\r\n            return\r\n        else:\r\n            print(\"\")\r\n            input(\"No has pulsado ninguna opción correcta...\\npulsa una tecla para continuar\")\r\n            \r\n\r\ndef mainmenu():\r\n    \"\"\" Se crean todas las tablas necesarias de la base de datos para su\r\n        manipulacion dentro del programa\"\"\"\r\n    con = afiliacion.sql_afiliado()\r\n    afiliacion.creartable(con)\r\n    con.close()\r\n    convacunas = lote_vacunas.sql_lotevacunas()\r\n    lote_vacunas.tabla_vacunas(convacunas)\r\n    convacunas.close()\r\n    conplan = plan_vacunacion.sql_plan()\r\n    plan_vacunacion.tabla_plan(conplan)\r\n    conplan.close()\r\n    progplan = ProgramacionVacunas.sql_prog()\r\n    ProgramacionVacunas.tabla_prog(progplan)\r\n    progplan.close()\r\n    \"\"\"\r\n    este es el menu principal apartir de este  se despliegan los submenus de cada modulo\r\n    \"\"\"\r\n    while True:\r\n        print('\\nS I S T E M A   D E   G E S T I Ó N   D E   V A C U N A C I Ó N ')\r\n        print(\"Selecciona una opción:\")\r\n        print(\"\\t1 - Administrar Afiliados\")\r\n        print(\"\\t2 - Administrar Vacunas\")\r\n        print(\"\\t3 - Plan Vacunacion\")\r\n        print(\"\\t4 - Programa Vacunacion\")\r\n        print(\"\\t5 - salir\")\r\n\r\n        # Mostramos el menu\r\n        # solicituamos una opción al usuario\r\n        opcionmenu = input(\"Seleccione una opcion:  \")\r\n\r\n        if opcionmenu == \"1\":\r\n            menuafi()\r\n        elif opcionmenu == \"2\":\r\n            menulote()\r\n        elif opcionmenu == \"3\":\r\n            menuvac()\r\n        elif opcionmenu == \"4\":\r\n            provac()\r\n        elif opcionmenu == \"5\":\r\n            break\r\n        else:\r\n            print(\"\")\r\n            input(\"No has pulsado ninguna opción correcta...\\npulsa una tecla para continuar\")\r\n\r\n\r\nmainmenu()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 290c213565d677bdce3ee5a73a79c98f70fde0d0)
+++ b/main.py	(date 1625957188230)
@@ -21,7 +21,6 @@
         if option == '1':
             print('\n')
             con = afiliacion.sql_afiliado()
-            #p=afiliacion.Afiliado().leer_info()
             afiliado = afiliacion.Afiliado().leer_info()
             afiliacion.insertar_tabla(con, afiliado)
             con.close()
Index: afiliacion.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\" Se importan las librerias para el manejo de las bases de datos, las fechas, envio de correos\r\n    electronicos y las conexiones con los modulos de afiliacion y lotes de vacunas\"\"\"\r\nfrom datetime import datetime\r\nfrom datetime import date\r\nimport sqlite3\r\nfrom sqlite3 import Error\r\nimport re\r\n\r\n\r\ndef sql_afiliado():\r\n    # funcion que crea la base de datos\r\n    try:\r\n        con = sqlite3.connect('sisgenvac.db')\r\n        return con\r\n    except Error:\r\n        print('Se ha producido un error al crear la conexion', Error)\r\n\r\n\r\n\"\"\"def VerTipDatoAlpha(self):\r\n    if dato.isalpha() == false:\r\n        tipo = \"alfabetico\"\r\n        sel\r\n        \"\"\"\r\n\r\n\r\nclass Afiliado:\r\n    def __init__(self):\r\n        self.ident = \"\"\r\n        self.nombre = \"\"\r\n        self.apelllidos = \"\"\r\n        self.direccion = \"\"\r\n        self.telefono = \"\"\r\n        self.email = \"\"\r\n        self.ciudad = \"\"\r\n        self.nacimiento = \"\"\r\n        self.afiliacion = \"\"\r\n        self.desafiliacion = \"\"\r\n        self.vacunado = \"\"\r\n\r\n    def leer_info(self):\r\n\r\n        \"\"\" Funcion para guardar la informacion que se le solicita al usuario\r\n            sobre un afiliado que se creara \"\"\"\r\n        while True:\r\n            \"\"\" Por medio de un bucle se verifica que el dato ingresado para la identificacion sea valor numerico\r\n                    y una longitud  max de de 13 caracteres\"\"\"\r\n            try:\r\n                self.ident = int(input(\"Número de identificación: \"))\r\n                lenid = str(self.ident)\r\n\r\n                if len(lenid) > 13:\r\n                    print(\"El numero de identificacion no puede tener mas de 12  digitos.\")\r\n                else:\r\n                    break\r\n            except ValueError:\r\n                print(\"escriba un número de identificacion valido.\")\r\n                continue\r\n\r\n        name = False\r\n        # bucle para pedir el nombre\r\n        while not name:\r\n            ''' Por medio de un bucle se verifica que el dato ingresado para el nombre sea valor un caracter alfabetico\r\n                            y una longitud  max de de 20 caracteres'''\r\n            # mensaje para que el usuario sepa que le solicitamos el nombre\r\n            self.nombre = (input(\"Nombre: \"))\r\n            name = (self.nombre.replace(\" \", \"\")).isalpha()\r\n            self.nombre = self.nombre.ljust(20)\r\n            if not name or len(self.nombre) > 20:\r\n                name = False\r\n                print(\"\\nEscriba un Nombre Valido\")\r\n\r\n        lastname = False\r\n        # bucle para pedir el apellido\r\n        while not lastname:\r\n            ''' Por medio de un bucle se verifica que el dato ingresado para el apellido sea valor un caracter alfabetico\r\n                                    y una longitud  max de de 20 caracteres'''\r\n            # mensaje para que el usuario sepa que le solicitamos el apellido\r\n            self.apellido = (input(\"Apellido: \"))\r\n            lastname = (self.apellido.replace(\" \", \"\")).isalpha()\r\n            self.apellido = self.apellido.ljust(20)\r\n            if not lastname or len(self.apellido) > 20:\r\n                lastname = False\r\n                print(\"\\nEscriba un Apellido Valido\")\r\n\r\n        adress = False\r\n        # bucle para pedir la direccion\r\n        while not adress:\r\n            ''' Por medio de un bucle se verifica que el dato ingresado para la direccion sea valor un caracter alfanumerico\r\n                                    y una longitud  max de de 20 caracteres, se usa un diccionario para remplazar\r\n                                    los  simbolos y poder realizar la verificacion de la cadena'''\r\n            # mensaje para que el usuario sepa que le solicitamos la direccion y validamso sea alfa numerica isalmun\r\n            direccion = (input(\"Direccion: \"))\r\n            # adress = (direccion.replace(\" \", \"\")).isalnum()\r\n            dictionary = {'#': \"\", ' ': '', '/': \"\", '-': \"\"}\r\n            transtable = direccion.maketrans(dictionary)\r\n            adress = direccion.translate(transtable)\r\n            direccion = direccion.ljust(20)\r\n            if not adress or len(direccion) > 20:\r\n                adress = False\r\n                print(\"\\nEscriba una Direccion Valida\")\r\n\r\n        while True:\r\n            try:\r\n                ''' Por medio de un bucle se verifica que el dato ingresado para el telefono sea valor un numero\r\n                                                y una longitud  max de 12 caracteres'''\r\n                telefono = int(input(\"Telefono: \"))\r\n                lentel = str(telefono)\r\n\r\n                if len(lentel) > 13:\r\n                    print(\"El numero de telefono no puede tener mas de 12  digitos.\")\r\n                else:\r\n                    break\r\n            except ValueError:\r\n                print(\"Escriba un numero de telefono valido.\")\r\n                continue\r\n        # variable que indica si el valor es válido\r\n        # inicialmente no lo es\r\n        valido = False\r\n        # bucle para pedir el valor\r\n        while not valido or len(email) > 20:\r\n            # mensaje para que el usuario sepa que le solicitamos un correo\r\n            email = (input(\"Correo electronico: \"))\r\n            # validacion por medio de la  funcion con regex\r\n            valido = es_correo_valido(email)\r\n            if not valido:\r\n                print(\"\\nescriba un correo valido: \")\r\n\r\n        city = False\r\n        # bucle para pedir la ciudad\r\n        while not city:\r\n            ''' Por medio de un bucle se verifica que el dato ingresado para el ciudad sea valor un caracter  alfabetico\r\n                                                        y una longitud  max de 20 caracteres'''\r\n            # mensaje para que el usuario sepa que le solicitamos la ciudad\r\n            ciudad = (input(\"Ciudad: \"))\r\n            city = (ciudad.replace(\" \", \"\")).isalpha()\r\n            if not city or len(ciudad) > 21:\r\n                # variable que indica si el valor es válido\r\n                # inicialmente no lo es\r\n                city = False\r\n                print(\"\\nEscriba una ciudad Valida: \")\r\n\r\n        # mensaje para que el usuario sepa que le solicitamos el dia de nacimiento\r\n        while True:\r\n            ''' Por medio de un bucles se verifica que el dato ingresado parala fecha de nacimiento  sean digitos, entre\r\n                un rango especifico como dias menores a  32, meses menores  a 13, que  el año tenga  4 digitos\r\n                y luego se pasa a un formato  fecha'''\r\n            dianac = input(\"Fecha de nacimiento:\\n\\n- Dia de nacimiento: \")\r\n            # Se verifica que el dato ingresado sea un dia existente dentro del calendario\r\n            while True:\r\n                if dianac.isdigit() and 0 < int(dianac) < 32:\r\n                    dianac = dianac.rjust(2, \"0\")\r\n                    break\r\n                else:\r\n                    dianac = input(\"Escriba el dia de nacimiento en dos digitos: \")\r\n            mesnac = input(\"- Mes de nacimiento: \")\r\n            # Se verifica que el dato ingresado sea un mes existente dentro del calendario\r\n            while True:\r\n                if mesnac.isdigit() and 0 < int(mesnac) < 13:\r\n                    mesnac = mesnac.rjust(2, \"0\")\r\n                    break\r\n                else:\r\n                    mesnac = input(\"Escriba el mes de nacimiento en numeros entre el 1 y 12: \")\r\n            anosnac = input(\"- año de nacimiento: \")\r\n            # Se verifica que el dato ingresado sea un año coherente para el nacimiento\r\n            while True:\r\n                if anosnac.isdigit() and len(anosnac) == 4:\r\n                    anosnac = anosnac.rjust(4)\r\n                    break\r\n                else:\r\n                    anosnac = input(\"Escriba el año de nacimiento en numeros AAAA: \")\r\n            # Se guardan los datos de la fecha en formato (DD/MM/AAAA)\r\n            nacimiento = datetime(int(anosnac), int(mesnac), int(dianac)).strftime(\"%Y/%m/%d\")\r\n            factual = datetime.now().strftime(\"%Y/%m/%d\")\r\n            # nacimiento = dianac+\"/\"+mesnac+\"/\"+anosnac\r\n            if nacimiento < factual:\r\n                nacimiento = datetime(int(anosnac), int(mesnac), int(dianac)).strftime(\"%d/%m/%Y\")\r\n                break\r\n            else:\r\n                print(\"La fecha de nacimiento no es valida: \")\r\n        print(\"Fecha ingresada: \" + nacimiento)\r\n\r\n        # se actualiza la fecha de afiliacion automaticamente\r\n        f = datetime.now()\r\n        dia = str(f.day).rjust(2, \"0\")\r\n        mes = str(f.month).rjust(2, \"0\")\r\n        ano = str(f.year).rjust(2, \"0\")\r\n        afiliacion = dia + \"/\" + mes + \"/\" + ano\r\n        print(\"la fecha de afiliacion es: \", afiliacion)\r\n\r\n        desafiliacion = \" \"\r\n\r\n        # Por defecto el usuario  ingresa como no  vacunado\r\n        vacunado = \"N\"\r\n\r\n        newafi = (\r\n            self.ident, self.nombre, self.apellido, direccion, telefono, email, ciudad, nacimiento, afiliacion, desafiliacion,\r\n            vacunado)\r\n        return newafi\r\n\r\n\r\ndef creartable(con):\r\n    \"\"\"\r\n             Se crea el objeto de conexión.\r\n             El objeto cursor se crea utilizando el objeto de conexión\r\n             se ejecuta el método execute con la consulta CREATE TABLE como parámetro         \"\"\"\r\n    cursorobj = con.cursor()\r\n    cursorobj.execute(\"CREATE TABLE IF NOT EXISTS afiliados(id integer PRIMARY KEY,nombre text,apellidos text,\"\r\n                      \"direccion text,telefono integer,email text, ciudad text,nacimiento text,afiliacion text,\"\r\n                      \"desafiliacion text,vacunado text)\")\r\n    con.commit()\r\n    \"\"\"\r\n             por medio del modulo re busca  concidencias de expresiones regulares para validar los caracteres  \r\n             y formato del  correo         \"\"\"\r\n\r\n\r\ndef es_correo_valido(email):\r\n    # funcion valida el formato del correo\r\n    regex = \"(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\\\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\\\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])\"\r\n    mailvalido = (re.search(regex, email))\r\n    return mailvalido\r\n\r\n\r\ndef insertar_tabla(con, newafi):\r\n    \"\"\" Se crea un nuevo afiliado con la informacion recolectada del usuario, haciendo uso del\r\n        objeto cursor y el metodo execute que utiliza el INSERT INTO dentro de los parametros\r\n        \"\"\"\r\n\r\n    cursorobj = con.cursor()\r\n    try:\r\n        cursorobj.execute('''INSERT INTO afiliados (id ,nombre,apellidos ,direccion,telefono ,email, ciudad ,nacimiento,\r\n        afiliacion,desafiliacion,vacunado) VALUES(?, ?, ?, ?,?,?,?, ?, ?, ?,?)''', newafi)\r\n        con.commit()\r\n    except:\r\n        print(\"\\nVerifique la informacion ingresada.\")\r\n        return\r\n\r\n\r\ndef vacunar(con):\r\n    \"\"\" Funcion que se utiliza para operar en la base de datos\"\"\"\r\n    cursorobj = con.cursor()\r\n    try:\r\n        ''' se selecciona en la  DB los registros que  no estan vacunadosy no estan desafiliados\r\n            en caso de no encontrar  que los afiliados esten vacunados y desafiliados nos indicara que no hay \r\n            a quien vacunar'''\r\n        cursorobj.execute('SELECT * FROM afiliados where vacunado = \"N\" AND desafiliacion = \" \"')\r\n        cursorobj.fetchall()[0]\r\n    except IndexError:\r\n        print(\"\\nNo hay usuarios que no se encuentren vacunados en este momento.\")\r\n        return\r\n\r\n    ident = input(\"id del afiliado a vacunar: \")\r\n    # Verifica que el id ingresado se encuentre en la base de datos y no este desafiliado\r\n    while True:\r\n        if ident.isdigit() and len(self.ident) < 13:\r\n            buscar = 'SELECT * FROM afiliados where id= ' + ident + ' AND desafiliacion = \" \"'\r\n            cursorobj.execute(buscar)\r\n            afil_b = cursorobj.fetchall()\r\n            if len(afil_b) != 0:\r\n                # Verificar que el afiliado no este vacunado\r\n                if afil_b[0][10] == 'S':\r\n                    print(\"El afiliado ya se encuentra vacunado\")\r\n                    return\r\n                else:\r\n                    break\r\n            else:\r\n                print(\"\\n El id \" + str(self.ident) + \" no se encuentra afiliado\")\r\n                return\r\n        # verificacion de longitud\r\n        if len(self.ident) > 13:\r\n            print(\"El numero de identificacion no puede tener mas de 12 digitos.\")\r\n        ident = input(\"Ingrese un id valido: \")\r\n\r\n    vacunado = str(self.ident)\r\n    print(\"\\t1 - Registrar Vacunacion del  afiliado\")\r\n    print(\"\\t2 - Volver al Menu  Anterior\")\r\n    option = input(\"Seleccione una opcion: \")\r\n    if option == '1':\r\n        # se hace el update del afiliado en el campo vacunado con un print informando\r\n        sql = 'SELECT vacunado FROM afiliados WHERE id =' + vacunado\r\n        cursorobj.execute(sql)\r\n        registros = cursorobj.fetchall()\r\n\r\n        if 'S' not in registros[0]:\r\n            actualizar = 'update afiliados SET vacunado = \"S\" where id =' + vacunado\r\n\r\n            cursorobj.execute(actualizar)\r\n            print(\"El afiliado \", vacunado, \"fue vacunado\")\r\n            con.commit()\r\n\r\n        else:\r\n            print(\" El afiliado ya se encuentra vacunado\")\r\n\r\n    elif option == \"2\":\r\n        return\r\n    else:\r\n        print(\"\")\r\n        input(\"No has pulsado ninguna opción correcta...\\npulsa una tecla para continuar\")\r\n\r\n\r\ndef desafiliar(con):\r\n    \"\"\" Funcion que se utiliza para operar en la base de datos\"\"\"\r\n    cursorobj = con.cursor()\r\n\r\n    try:\r\n        # recorremos la DB  en busqueda de registros sin desafiliacion\r\n        cursorobj.execute('SELECT * FROM afiliados where desafiliacion = \" \"')\r\n        cursorobj.fetchall()[0]\r\n    except IndexError:\r\n        print(\"\\nNo hay usuarios registrados en este momento.\")\r\n        return\r\n\r\n    desafiliado = input(\"identificacion del usuario a desafiliar: \")\r\n    # Verifiar que el id ingresado se encuentre en la base de datos\r\n    while True:\r\n        if desafiliado.isdigit() and len(desafiliado) < 13:\r\n            buscar = 'SELECT * FROM afiliados where id= ' + desafiliado + ' AND desafiliacion = \" \"'\r\n            cursorobj.execute(buscar)\r\n            afil_b = cursorobj.fetchall()\r\n            if len(afil_b) != 0:\r\n                break\r\n            else:\r\n                print(\r\n                    \"El id \" + str(desafiliado) + \" no se encuentra en la base de datos o ya se encuentra desafiliado\")\r\n            return\r\n        if len(desafiliado) > 13:\r\n            print(\"El numero de identificacion no puede tener mas de 12 digitos.\")\r\n        desafiliado = input(\"Ingrese un id valido: \")\r\n    f = datetime.now()\r\n    dia = str(f.day).rjust(2, \"0\")\r\n    mes = str(f.month).rjust(2, \"0\")\r\n    ano = str(f.year).rjust(2, \"0\")\r\n    desafiliacion = dia + \"/\" + mes + \"/\" + ano\r\n    print(\"la fecha de desafiliacion es: \", desafiliacion)\r\n    actualizar = 'update afiliados SET desafiliacion = (?)  where id=(?)'\r\n    cursorobj.execute(actualizar, (desafiliacion, desafiliado))\r\n    print(\"El afiliado \", desafiliado, \"fue desafiliado\")\r\n    con.commit()\r\n\r\n\r\n''' Funcion para consultar la informacion de los afiliados,\r\n    la cual toma como parametro la conexion con la base de datos del programa'''\r\n\r\n\r\ndef consulta(con):\r\n    cursorobj = con.cursor()\r\n    try:\r\n        # recorre la DB para verificar que no este vacia\r\n        cursorobj.execute('SELECT * FROM afiliados')\r\n        cursorobj.fetchall()[0]\r\n    except IndexError:\r\n\r\n        print(\"\\nNo hay usuarios registrados en este momento.\")\r\n        return\r\n\r\n    self.ident = input(\"Número de identificación: \")\r\n    lenid = str(self.ident)\r\n\r\n    if len(lenid) > 13:\r\n        print(\"El numero de identificacion no puede tener mas de 12  digitos.\")\r\n        return\r\n    # Verifica que el id ingresado se encuentre en la base de datos\r\n    while True:\r\n        if self.ident.isdigit():\r\n            buscar = 'SELECT * FROM afiliados where id= ' + self.ident\r\n            cursorobj.execute(buscar)\r\n            afil_b = cursorobj.fetchall()\r\n            if len(afil_b) != 0:\r\n                break\r\n            else:\r\n                print(\"El id \" + str(self.ident) + \" no se encuentra en la base de datos\")\r\n        self.ident = input(\"Ingrese un id valido: \")\r\n\r\n    # muestra la informacion del afiliado consultado\r\n\r\n    print(\"+{:-<12}+{:-<20}+{:-<20}+{:-<30}+{:-<12}+{:-<25}+{:-<20}+{:-<10}+{:-<10}+{:-<15}+{:-<10}+\".format(\"\", \"\", \"\",\r\n                                                                                                             \"\", \"\", \"\",\r\n                                                                                                             \"\", \"\", \"\",\r\n                                                                                                             \"\", \"\"))\r\n    print(\"|{:^12}|{:^20}|{:^20}|{:^30}|{:^12}|{:^25}|{:^20}|{:^10}|{:^10}|{:^15}|{:^10}|\".format(\"Documento\", \"Nombre\",\r\n                                                                                                  \"Apellido\",\r\n                                                                                                  \"Direccion\",\r\n                                                                                                  \"Telefono\", \"Email\",\r\n                                                                                                  \"Ciudad\",\r\n                                                                                                  \"Nacimiento\",\r\n                                                                                                  \"Afiliacion\",\r\n                                                                                                  \"Desafiliacion\",\r\n                                                                                                  \"Vacunado\"))\r\n    print(\"+{:-<12}+{:-<20}+{:-<20}+{:-<30}+{:-<12}+{:-<25}+{:-<20}+{:-<10}+{:-<10}+{:-<15}+{:-<10}+\".format(\"\", \"\", \"\",\r\n                                                                                                             \"\", \"\", \"\",\r\n                                                                                                             \"\", \"\", \"\",\r\n                                                                                                             \"\", \"\"))\r\n    for idaf, nombre, apellido, direccion, telefono, email, ciudad, nacimiento, afiliacion, desafiliacion, vacunado in afil_b:\r\n        print(\"|{:^12}|{:^20}|{:^20}|{:^30}|{:^12}|{:^25}|{:^20}|{:^10}|{:^10}|{:^15}|{:^10}|\".format(idaf, nombre,\r\n                                                                                                      apellido,\r\n                                                                                                      direccion,\r\n                                                                                                      telefono, email,\r\n                                                                                                      ciudad,\r\n                                                                                                      nacimiento,\r\n                                                                                                      afiliacion,\r\n                                                                                                      desafiliacion,\r\n                                                                                                      vacunado))\r\n    print(\"+{:-<12}+{:-<20}+{:-<20}+{:-<30}+{:-<12}+{:-<25}+{:-<20}+{:-<10}+{:-<10}+{:-<15}+{:-<10}+\".format(\"\", \"\", \"\",\r\n                                                                                                             \"\", \"\", \"\",\r\n                                                                                                             \"\", \"\", \"\",\r\n                                                                                                             \"\", \"\"))\r\n    con.commit()\r\n\r\n\r\ndef cerrar_db(con):\r\n    con.close()\r\n\r\n# def main():\r\n# con = sql_afiliado()\r\n# creartable(con)\r\n# afiliado = leer_info()\r\n# insertar_tabla(con, afiliado)\r\n# consulta(con)\r\n# cerrar_db(con)\r\n# main()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/afiliacion.py b/afiliacion.py
--- a/afiliacion.py	(revision 290c213565d677bdce3ee5a73a79c98f70fde0d0)
+++ b/afiliacion.py	(date 1625959763335)
@@ -89,13 +89,13 @@
                                     y una longitud  max de de 20 caracteres, se usa un diccionario para remplazar
                                     los  simbolos y poder realizar la verificacion de la cadena'''
             # mensaje para que el usuario sepa que le solicitamos la direccion y validamso sea alfa numerica isalmun
-            direccion = (input("Direccion: "))
+            self.direccion = (input("Direccion: "))
             # adress = (direccion.replace(" ", "")).isalnum()
             dictionary = {'#': "", ' ': '', '/': "", '-': ""}
-            transtable = direccion.maketrans(dictionary)
-            adress = direccion.translate(transtable)
-            direccion = direccion.ljust(20)
-            if not adress or len(direccion) > 20:
+            transtable = self.direccion.maketrans(dictionary)
+            adress = self.direccion.translate(transtable)
+            self.direccion = self.direccion.ljust(20)
+            if not adress or len(self.direccion) > 20:
                 adress = False
                 print("\nEscriba una Direccion Valida")
 
@@ -103,8 +103,8 @@
             try:
                 ''' Por medio de un bucle se verifica que el dato ingresado para el telefono sea valor un numero
                                                 y una longitud  max de 12 caracteres'''
-                telefono = int(input("Telefono: "))
-                lentel = str(telefono)
+                self.telefono = int(input("Telefono: "))
+                lentel = str(self.telefono)
 
                 if len(lentel) > 13:
                     print("El numero de telefono no puede tener mas de 12  digitos.")
@@ -117,11 +117,11 @@
         # inicialmente no lo es
         valido = False
         # bucle para pedir el valor
-        while not valido or len(email) > 20:
+        while not valido or len(self.email) > 20:
             # mensaje para que el usuario sepa que le solicitamos un correo
-            email = (input("Correo electronico: "))
+            self.email = (input("Correo electronico: "))
             # validacion por medio de la  funcion con regex
-            valido = es_correo_valido(email)
+            valido = es_correo_valido(self.email)
             if not valido:
                 print("\nescriba un correo valido: ")
 
@@ -193,7 +193,7 @@
         vacunado = "N"
 
         newafi = (
-            self.ident, self.nombre, self.apellido, direccion, telefono, email, ciudad, nacimiento, afiliacion, desafiliacion,
+            self.ident, self.nombre, self.apellido, self.direccion, self.telefono, self.email, ciudad, nacimiento, afiliacion, desafiliacion,
             vacunado)
         return newafi
 
@@ -216,7 +216,7 @@
 def es_correo_valido(email):
     # funcion valida el formato del correo
     regex = "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])"
-    mailvalido = (re.search(regex, email))
+    mailvalido = (re.search(regex, self.email))
     return mailvalido
 
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"31656571-185a-4cde-8de1-7d5e1041d094\" name=\"Default Changelist\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/afiliacion.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/afiliacion.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/sisgenvac.db\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/sisgenvac.db\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"showPreview\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1rJFQ9iyP4zmKnWzdjWXCyJyqee\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File\" value=\"Python\" />\r\n    <property name=\"full.screen.before.presentation.mode\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/plan_vacunacion.py\" />\r\n    <property name=\"restartRequiresConfirmation\" value=\"false\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.pluginManager\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"G:\\Documentos\\Proyectos\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.main\">\r\n    <configuration name=\"GUI TEST\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"G:\\Documentos\\Proyectos\\venv\\Scripts\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/GUI TEST.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Grafico1\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"G:\\Documentos\\Proyectos\\venv\\Scripts\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Grafico1.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"afiliacion\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"G:\\programas\\python\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/afiliacion.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"main (1)\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"G:\\programas\\python\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/../poo/carro\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/../poo/carro/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"G:\\Documentos\\Proyectos\\venv\\Scripts\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <module name=\"\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.main\" />\r\n        <item itemvalue=\"Python.afiliacion\" />\r\n        <item itemvalue=\"Python.main (1)\" />\r\n        <item itemvalue=\"Python.Grafico1\" />\r\n        <item itemvalue=\"Python.GUI TEST\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"31656571-185a-4cde-8de1-7d5e1041d094\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1618686272546</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1618686272546</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"cambio  desafiliacion\">\r\n      <created>1619761229720</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619761229720</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"cambio  desafiliacion&#10;menu  corregido\">\r\n      <created>1619761304664</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619761304664</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Observacion de plan de vacunacion\">\r\n      <created>1619763996909</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619763996909</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Observacion de plan de vacunacion\">\r\n      <created>1619764974330</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619764974330</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Observacion de plan de vacunacion\">\r\n      <created>1619765252176</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619765252176</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"rescate  viernes\">\r\n      <created>1619818218546</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619818218546</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"rescate  viernes\">\r\n      <created>1619818263393</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619818263393</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"rescate  viernes\">\r\n      <created>1619911939312</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619911939312</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"update validacion y errores peques\">\r\n      <created>1619916694595</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619916694595</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"validaciones\">\r\n      <created>1619918207212</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619918207212</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"validaciones ciudad\">\r\n      <created>1619918478441</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619918478441</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"validaciones ciudad\">\r\n      <created>1619918659921</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619918659921</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"validacion telefono y  id\">\r\n      <created>1619918820900</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619918820900</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"validacion telefono y  id\">\r\n      <created>1619918908705</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619918908705</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"validacion telefono y  id\">\r\n      <created>1619919107029</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619919107029</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"validacion telefono y  id\">\r\n      <created>1619919147584</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619919147584</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"validacion telefono y  id\">\r\n      <created>1619919258903</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619919258903</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"se corrige textos de  lotes y fechas\">\r\n      <created>1619920436554</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619920436554</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"valida la direccion elimandocaracteres  como #,- y espacios\">\r\n      <created>1619923560292</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619923560292</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"valida la direccion elimandocaracteres  como #,- y espacios\">\r\n      <created>1619923597317</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619923597317</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"valida la direccion elimandocaracteres  como #,- y espacios\">\r\n      <created>1619930409545</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619930409545</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"crudo esto\">\r\n      <created>1619936571548</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1619936571548</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"crudo esto\">\r\n      <created>1622858005198</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1622858005198</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"SE ACTUALIZA EL MENU DE VACUNACION AFLIADO YA QUE NO TENIA   VALIDACIONES\">\r\n      <created>1623778703351</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623778703351</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"VALIDACION QUE SEA NUMERO&#10;VERIFICA SI YA ESTA VACUNADO\">\r\n      <created>1623950206422</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623950206422</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\".\">\r\n      <created>1624312684959</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624312684959</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"revisar si esta  no vacunado y desafiliado\">\r\n      <created>1624467799917</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624467799917</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"comentarios tecnicos  fix pequeños\">\r\n      <created>1624984562430</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624984562430</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"comentarios tecnicos  fix pequeños\">\r\n      <created>1624989860357</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1624989860357</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"fix  mail\">\r\n      <created>1625000115004</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1625000115004</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"fix error  id repetido\">\r\n      <created>1625706893238</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1625706893238</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"32\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.History.Properties\">\r\n    <option name=\"COLUMN_ID_ORDER\">\r\n      <list>\r\n        <option value=\"Default.Root\" />\r\n        <option value=\"Default.Author\" />\r\n        <option value=\"Default.Date\" />\r\n        <option value=\"Default.Subject\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"cambio  desafiliacion\" />\r\n    <MESSAGE value=\"cambio  desafiliacion&#10;menu  corregido\" />\r\n    <MESSAGE value=\"Observacion de plan de vacunacion\" />\r\n    <MESSAGE value=\"rescate  viernes\" />\r\n    <MESSAGE value=\"update validacion y errores peques\" />\r\n    <MESSAGE value=\"validaciones\" />\r\n    <MESSAGE value=\"validaciones ciudad\" />\r\n    <MESSAGE value=\"validacion telefono y  id\" />\r\n    <MESSAGE value=\"se corrige textos de  lotes y fechas\" />\r\n    <MESSAGE value=\"valida la direccion elimandocaracteres  como #,- y espacios\" />\r\n    <MESSAGE value=\"crudo esto\" />\r\n    <MESSAGE value=\"SE ACTUALIZA EL MENU DE VACUNACION AFLIADO YA QUE NO TENIA   VALIDACIONES\" />\r\n    <MESSAGE value=\"VALIDACION QUE SEA NUMERO&#10;VERIFICA SI YA ESTA VACUNADO\" />\r\n    <MESSAGE value=\".\" />\r\n    <MESSAGE value=\"revisar si esta  no vacunado y desafiliado\" />\r\n    <MESSAGE value=\"comentarios tecnicos  fix pequeños\" />\r\n    <MESSAGE value=\"fix  mail\" />\r\n    <MESSAGE value=\"fix error  id repetido\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"fix error  id repetido\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 290c213565d677bdce3ee5a73a79c98f70fde0d0)
+++ b/.idea/workspace.xml	(date 1625959763651)
@@ -5,7 +5,6 @@
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/afiliacion.py" beforeDir="false" afterPath="$PROJECT_DIR$/afiliacion.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/sisgenvac.db" beforeDir="false" afterPath="$PROJECT_DIR$/sisgenvac.db" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -395,7 +394,14 @@
       <option name="project" value="LOCAL" />
       <updated>1625706893238</updated>
     </task>
-    <option name="localTasksCounter" value="32" />
+    <task id="LOCAL-00032" summary=".">
+      <created>1625956921377</created>
+      <option name="number" value="00032" />
+      <option name="presentableId" value="LOCAL-00032" />
+      <option name="project" value="LOCAL" />
+      <updated>1625956921377</updated>
+    </task>
+    <option name="localTasksCounter" value="33" />
     <servers />
   </component>
   <component name="Vcs.Log.History.Properties">
@@ -425,11 +431,11 @@
     <MESSAGE value="crudo esto" />
     <MESSAGE value="SE ACTUALIZA EL MENU DE VACUNACION AFLIADO YA QUE NO TENIA   VALIDACIONES" />
     <MESSAGE value="VALIDACION QUE SEA NUMERO&#10;VERIFICA SI YA ESTA VACUNADO" />
-    <MESSAGE value="." />
     <MESSAGE value="revisar si esta  no vacunado y desafiliado" />
     <MESSAGE value="comentarios tecnicos  fix pequeños" />
     <MESSAGE value="fix  mail" />
     <MESSAGE value="fix error  id repetido" />
-    <option name="LAST_COMMIT_MESSAGE" value="fix error  id repetido" />
+    <MESSAGE value="." />
+    <option name="LAST_COMMIT_MESSAGE" value="." />
   </component>
 </project>
\ No newline at end of file
